$bp-sizes: (
  default: (
  	base-font-size: 12,
  	base-line-height: 1.3,
  	scale: 1.15
  ),
  small: (
    base-font-size: 12,
    base-line-height: 1.3,
    scale: 1.2
  ),
  medium: (
    base-font-size: 12,
    base-line-height: 1.3,
    scale: 1.3
  ),
  large: (
    base-font-size: 14,
    base-line-height: 1.3,
    scale: 1.2
  )
);

$breakpoints: (
  default: '',
  small: 768px,
  medium: 992px,
  large: 1200px
);

$font-sizes: ( fontSize6, fontSize5, fontSize4, fontSize3, fontSize2, fontSize1 );

@mixin breakpoint($name) {
  @if not map-has-key($breakpoints, $name) {
    @warn "Invalid breakpoint `#{$name}`.";
  } @else {
    @if map-get($breakpoints, $name) == '' {
      @content;
    } @else {
      @media (min-width: map-get($breakpoints, $name)) {
        @content;
      } 
    }
  }
}

@function get-breakpoint-property($prop, $bp) {
  @return map-get(map-get($bp-sizes, $bp), $prop);
}

@mixin generate-font-properties($label, $scale, $base-font-size, $base-line-height) {
  $scale-value: index($font-sizes, $label) - 1; // 1

  $fs: pow($scale, $scale-value) * $base-font-size; // 1.2 * 1  *  12 == 14.4
	$lh: $base-font-size * $base-line-height / $fs; // 12 * 1.3 / 14.4 == 1.083rec

	@while $lh < 1 {
	  $lh: $lh + $lh;
	}
  
  font-size: $fs + px;
  // font-size: pow($scale, $scale-value) + rem;
  line-height: $lh;
}

@each $size, $data in $bp-sizes {

  $bsf: get-breakpoint-property(base-font-size, $size);
  $blh: get-breakpoint-property(base-line-height, $size);
  $s: get-breakpoint-property(scale, $size);
  
  @include breakpoint($size) {
    @each $label in $font-sizes {
      %#{$label} {
        @include generate-font-properties($label, $s, $bsf, $blh);
      }  
    }
  }
}